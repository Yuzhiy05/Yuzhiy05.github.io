import{_ as i,c as a,b as t,o as n}from"./app-Bb1tC85q.js";const e={};function l(o,s){return n(),a("div",null,s[0]||(s[0]=[t(`<p>指定生成器 使用插件生成的cmakepresets cmake预设不能指定 cmake_cxx_flag和cmake_c_flag 和生成器</p><div class="language-json" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">generator</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Ninja</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CMAKE_CXX_FLAGS</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">--target=x86_64-windows-gnu --sysroot=D:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">workfile</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">toolchain</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">compiler</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">x86_64-windows-gnu</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">x86_64-windows-gnu -fuse-ld=lld  -rtlib=compiler-rt -unwindlib=libunwind  -lc++abi -lunwind -lntdll -Wno-unused-command-line-argument -stdlib=libc++</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CMAKE_C_FLAGS</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">--target=x86_64-windows-gnu --sysroot=D:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">workfile</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">toolchain</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">compiler</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">x86_64-windows-gnu</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">x86_64-windows-gnu -fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind  -lc++abi -lunwind -lntdll -Wno-unused-command-line-argument </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre></div><p>配置中 Cmake: Preferred Generators 项指定生成器</p><p>Clangd设置中 Clangd: Arguments</p><p>--compile-commands-dir=\${workspaceFolder}/out/build/clang_debug</p><p>这个指定路径是固定的,需要 生成预设的时候改这个</p><p>&quot;binaryDir&quot;: &quot;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi><mi>D</mi><mi>i</mi><mi>r</mi></mrow><mi mathvariant="normal">/</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>u</mi><mi>i</mi><mi>l</mi><mi>d</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">{sourceDir}/out/build/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">so</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">rceD</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span class="mord">/</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord">/</span></span></span></span>{presetName}&quot;,</p>`,7)]))}const r=i(e,[["render",l],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/article/19lgyzty/","title":"vscode的cmaketools","lang":"zh-CN","frontmatter":{"title":"vscode的cmaketools","createTime":"2025/07/05 00:29:16","permalink":"/article/19lgyzty/","description":"指定生成器 使用插件生成的cmakepresets cmake预设不能指定 cmake_cxx_flag和cmake_c_flag 和生成器 配置中 Cmake: Preferred Generators 项指定生成器 Clangd设置中 Clangd: Arguments --compile-commands-dir=${workspaceFolde...","head":[["meta",{"property":"og:url","content":"https://github.com/Yuzhiy05/Yuzhiy05.github.io/article/19lgyzty/"}],["meta",{"property":"og:title","content":"vscode的cmaketools"}],["meta",{"property":"og:description","content":"指定生成器 使用插件生成的cmakepresets cmake预设不能指定 cmake_cxx_flag和cmake_c_flag 和生成器 配置中 Cmake: Preferred Generators 项指定生成器 Clangd设置中 Clangd: Arguments --compile-commands-dir=${workspaceFolde..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-23T14:49:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-23T14:49:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vscode的cmaketools\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-23T14:49:54.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.55,"words":166},"git":{"createdTime":1751619474000,"updatedTime":1753282194000,"contributors":[{"name":"ImoutoCon1999","email":"ImoutoCon1999@outlook.com","commits":1},{"name":"Yuzhiy05","email":"ImoutoCon1999@outlook.com","commits":1}]},"autoDesc":true,"filePathRelative":"tools/vscode的cmaketools.md","categoryList":[{"id":"4a9315","sort":10001,"name":"tools"}],"bulletin":false}');export{r as comp,m as data};
